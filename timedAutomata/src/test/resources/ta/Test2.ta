process Sender_A {

  clock A_c;
  clock B_c,C_c;
  int A_stop,B_start;
  state  start, call_check, call_observe, check_eof, ex_jam;
  init   start;
  trans  call_check -> ex_jam {
           guard  A_stop  ==0;
           sync   A_check!;
           assign A_c = 0;
         },
         call_observe -> call_observe {
           guard  B_start  ==0;
           sync   A_check!;
           assign A_c = 0;
         },
          -> call_observe {
           guard  B_start  ==1;
           sync   A_check!;
           assign A_c = 0;
         }  ;
}

 
int A_Pf, A_Pn, A_S1, A_S2,  A_start;
 
int B_Pf, B_Pn, B_S1, B_S2, B_stop;
 
chan A_frame, A_reset, A_new_Pn;
int A_msg, A_no, A_eof, A_T4;
 
int B_msg, B_no, B_eof, B_T4;
 
int A_err, A_res;
 
int B_err, B_res;
 
int A_diff;
 
int B_diff;
 

 
system Sender_A, Sender_B, 
  Frame_Generator_A, Frame_Generator_B,
  Detector_A, Detector_B,
  Observer_A, Observer_B,
  Bus;


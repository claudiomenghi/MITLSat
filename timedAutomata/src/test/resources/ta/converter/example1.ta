process Sender_A {
  state  call_check, call_observe, check_eof, end_jam;
  init   start;
  trans  call_check -> ex_jam {
           guard  A_stop  ==0;
           sync   A_check!;
           assign A_c = 0;
         },
         call_observe -> check_eof {
           guard  B_start  ==0;
           assign A_c = 0;
         },
          -> other_started {
           guard  B_start  ==1;
           assign A_c = 0;
         },
         goto_idle -> end_jam {
           assign A_c = 0;
         };
}

 
 
 clock c;
 
clock A_c;
int A_Pf, A_Pn, A_S1, A_S2,
  A_start, A_stop;
 
clock B_c;
int B_Pf, B_Pn, B_S1, B_S2,
  B_start, B_stop;
 
chan A_frame, A_reset, A_new_Pn;
int A_msg, A_no, A_eof, A_T4;
 
chan B_frame, B_reset, B_new_Pn;
int B_msg, B_no, B_eof, B_T4;
 
chan A_check;
int A_err, A_res;
 
chan B_check;
int B_err, B_res;
 
chan A_observe;
int A_diff;
 
chan B_observe;
int B_diff;
 
chan one, zero;

 
system Sender_A, Sender_B, 
  Frame_Generator_A, Frame_Generator_B,
  Detector_A, Detector_B,
  Observer_A, Observer_B,
  Bus;

